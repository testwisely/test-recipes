# You need Ruby (Rake, RWebSpec, ci_reporter gems installed)
#   Simplest way on Windows is to install RubyShell (http://testwisely.com/downloads)

require 'rubygems'
gem 'rspec'
require 'rspec/core/rake_task'

gem 'ci_reporter'
require 'ci/reporter/rake/rspec' # use this if you're using RSpec

$test_dir =  File.expand_path(File.dirname(__FILE__) ) # change to absolute path


task :default => ["go"]

# For BuildWise CI
BUILDWISE_URL = ENV["BUILDWISE_MASTER"] || "http://buildwise.macmini"
BUILDWISE_QUICK_PROJECT_ID = "api-testing-recipes-ruby" 
BUILDWISE_FULL_PROJECT_ID = "api-testing-recipes-ruby-parallel" 

FULL_BUILD_MAX_TIME = ENV["DISTRIBUTED_MAX_BUILD_TIME"].to_i || 60 * 60   # max build time, over this, time out
FULL_BUILD_CHECK_INTERVAL =  ENV["DISTRIBUTED_BUILD_CHECK_INTERVAL"].to_i || 20  # check interval for build complete

import File.join(File.dirname(__FILE__), "buildwise.rake")

def specs_for_quick_build
  # list test files to be run in a quick build
  [
    "#{$test_dir}/spec/soap_spec.rb", 
    "#{$test_dir}/spec/restful_spec.rb", 
    "#{$test_dir}/spec/parse_xml_spec.rb", 
  ]
end



# List tests you want to exclude
def excluded_spec_files
  ["spec/ignore_spec.rb", "spec/email_spec.rb"]
end


desc "run all webservices test in this folder"
RSpec::Core::RakeTask.new("wstest") do |t|
  test_files = Dir.glob("#{$test_dir}/spec/*soap*_spec.rb") + Dir.glob("#{$test_dir}/spec/*rest*_spec.rb")
  t.pattern = FileList[test_files]
  t.rspec_opts = ""    # to enable warning: "-w"
end

desc "run tests with exclusions"
RSpec::Core::RakeTask.new("wstest:selected") do |t|
  test_files = Dir.glob("#{$test_dir}/spec/*_spec.rb") - excluded_spec_files
  t.pattern = FileList[test_files]
  t.rspec_opts = "" # to enable warning: "-w"
end


desc "run test with junit report output"
task "wstest:report" => ["ci:setup:rspec"] do
  Rake::Task["wstest"].invoke
end


require 'rake/testtask'

Rake::TestTask.new("wstest_minitest") do |t|
  t.test_files = FileList["#{$test_dir}/minitest/soap*.rb"]
  t.verbose = true
end


desc "run all tests in this folder"
RSpec::Core::RakeTask.new("api_tests:quick") do |t|
  specs_to_be_executed = buildwise_determine_specs_for_quick_build(specs_for_quick_build, excluded_spec_files);
  buildwise_formatter =  File.join(File.dirname(__FILE__), "buildwise_rspec_formatter.rb")
  t.rspec_opts = "--pattern my_own_custom_order --require #{buildwise_formatter} #{specs_to_be_executed.join(' ')} --order defined"
end


desc "run quick tests from BuildWise"
task "ci:api_tests:quick" => ["ci:setup:rspec"] do
  build_id = buildwise_start_build(:project_name => BUILDWISE_QUICK_PROJECT_ID,
    :working_dir => File.expand_path(File.dirname(__FILE__)),
    :ui_test_dir => ["."],
    :excluded => excluded_spec_files
  )
  buildwise_run_sequential_build_target(build_id, "api_tests:quick")
end


desc "Running tests distributedly"
task "ci:api_tests:parallel" => ["ci:setup:rspec"] do
  build_id = buildwise_start_build(:working_dir => File.expand_path(File.dirname(__FILE__)),
                                   :ui_test_dir => ["api-tests/spec"],
                                   :except => excluded_spec_files || [],
                                   :parallel => true
  )

  buildwise_montior_parallel_execution(build_id, :max_wait_time => FULL_BUILD_MAX_TIME, :check_interval => FULL_BUILD_CHECK_INTERVAL)
end




## RSpec

desc "selected key tests"
RSpec::Core::RakeTask.new("test:selected") do |t|
  # list test script files you want to run below
  t.pattern = ["spec/ch02_soap_spec.rb","spec/ch03_rest_spec.rb"]
end

# desc "Run all RSpec tests in the current folder"
# RSpec::Core::RakeTask.new("test:all") do |t|
#  t.pattern = ["spec/*_spec.rb"] 
# end

desc "Run all RSpec tests in the current folder"
RSpec::Core::RakeTask.new("test:all") do |t|
  all_specs = Dir.glob("#{$test_dir}/spec/*_spec.rb")
  specs_to_be_executed = all_specs - excluded_spec_files
  t.pattern = FileList[specs_to_be_executed]
end

